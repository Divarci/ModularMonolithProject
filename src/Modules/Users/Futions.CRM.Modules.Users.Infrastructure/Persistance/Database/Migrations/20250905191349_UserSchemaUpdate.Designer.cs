// <auto-generated />
using System;
using Futions.CRM.Modules.Users.Infrastructure.Persistance.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Futions.CRM.Modules.Users.Infrastructure.Persistance.Database.Migrations
{
    [DbContext(typeof(UsersDbContext))]
    [Migration("20250905191349_UserSchemaUpdate")]
    partial class UserSchemaUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("users")
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Futions.CRM.Modules.Users.Domain.Permissions.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Permission", "users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c935b2be-3d2f-44c4-9c2d-f00b5375ac48"),
                            Code = "users:read"
                        },
                        new
                        {
                            Id = new Guid("818d85f9-5961-40a1-9d4a-e207e30ba783"),
                            Code = "users:update"
                        },
                        new
                        {
                            Id = new Guid("39675711-a006-4b01-ba29-0d933f268060"),
                            Code = "deals:read"
                        },
                        new
                        {
                            Id = new Guid("3ed06827-98b7-4916-bef7-70e3119dd8ec"),
                            Code = "deals:update"
                        },
                        new
                        {
                            Id = new Guid("e9338b23-2d61-4ec3-aa80-ba8fe59b65f0"),
                            Code = "deals:create"
                        },
                        new
                        {
                            Id = new Guid("46efca56-d955-4815-80f5-14d382471c52"),
                            Code = "deals:remove"
                        });
                });

            modelBuilder.Entity("Futions.CRM.Modules.Users.Domain.Roles.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Role", "users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c2c722b-094b-4111-bddb-0086af5277ed"),
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = new Guid("5de1f66b-991d-49ea-ad1a-059b5eebcf8d"),
                            Name = "Member"
                        });
                });

            modelBuilder.Entity("Futions.CRM.Modules.Users.Domain.Roles.RolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermission", "users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4ae14806-e433-43ed-a1ce-b80ebcd9a811"),
                            PermissionId = new Guid("39675711-a006-4b01-ba29-0d933f268060"),
                            RoleId = new Guid("5de1f66b-991d-49ea-ad1a-059b5eebcf8d")
                        },
                        new
                        {
                            Id = new Guid("a2fcb4af-b11b-48cb-925a-80bf668e0ebe"),
                            PermissionId = new Guid("e9338b23-2d61-4ec3-aa80-ba8fe59b65f0"),
                            RoleId = new Guid("5de1f66b-991d-49ea-ad1a-059b5eebcf8d")
                        },
                        new
                        {
                            Id = new Guid("07c74200-ad79-47cc-bfc5-6a03574d9ea1"),
                            PermissionId = new Guid("3ed06827-98b7-4916-bef7-70e3119dd8ec"),
                            RoleId = new Guid("5de1f66b-991d-49ea-ad1a-059b5eebcf8d")
                        },
                        new
                        {
                            Id = new Guid("5492e74b-97ec-42a2-b048-e08eb9c179c0"),
                            PermissionId = new Guid("c935b2be-3d2f-44c4-9c2d-f00b5375ac48"),
                            RoleId = new Guid("5de1f66b-991d-49ea-ad1a-059b5eebcf8d")
                        },
                        new
                        {
                            Id = new Guid("9613b245-c7f4-4d29-a740-81cd729a5158"),
                            PermissionId = new Guid("39675711-a006-4b01-ba29-0d933f268060"),
                            RoleId = new Guid("4c2c722b-094b-4111-bddb-0086af5277ed")
                        },
                        new
                        {
                            Id = new Guid("28624ad4-d4f9-4dfd-81c9-9f8644bbf3cb"),
                            PermissionId = new Guid("e9338b23-2d61-4ec3-aa80-ba8fe59b65f0"),
                            RoleId = new Guid("4c2c722b-094b-4111-bddb-0086af5277ed")
                        },
                        new
                        {
                            Id = new Guid("ba67ed03-8a2a-48b4-bc9b-cf5440064cb3"),
                            PermissionId = new Guid("3ed06827-98b7-4916-bef7-70e3119dd8ec"),
                            RoleId = new Guid("4c2c722b-094b-4111-bddb-0086af5277ed")
                        },
                        new
                        {
                            Id = new Guid("d9a55c23-3362-484f-bd5a-81337ffa59c2"),
                            PermissionId = new Guid("46efca56-d955-4815-80f5-14d382471c52"),
                            RoleId = new Guid("4c2c722b-094b-4111-bddb-0086af5277ed")
                        },
                        new
                        {
                            Id = new Guid("4f5f60f4-530f-4cc0-9b61-19f39657f3b9"),
                            PermissionId = new Guid("c935b2be-3d2f-44c4-9c2d-f00b5375ac48"),
                            RoleId = new Guid("4c2c722b-094b-4111-bddb-0086af5277ed")
                        },
                        new
                        {
                            Id = new Guid("1eb17514-e8da-48a0-b3e2-b14c204f1df3"),
                            PermissionId = new Guid("818d85f9-5961-40a1-9d4a-e207e30ba783"),
                            RoleId = new Guid("4c2c722b-094b-4111-bddb-0086af5277ed")
                        });
                });

            modelBuilder.Entity("Futions.CRM.Modules.Users.Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("IdentityId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IdentityId")
                        .IsUnique();

                    b.ToTable("User", "users");
                });

            modelBuilder.Entity("Futions.CRM.Modules.Users.Domain.Users.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole", "users");
                });

            modelBuilder.Entity("Futions.CRM.Modules.Users.Domain.Roles.RolePermission", b =>
                {
                    b.HasOne("Futions.CRM.Modules.Users.Domain.Permissions.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Futions.CRM.Modules.Users.Domain.Roles.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Futions.CRM.Modules.Users.Domain.Users.UserRole", b =>
                {
                    b.HasOne("Futions.CRM.Modules.Users.Domain.Roles.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Futions.CRM.Modules.Users.Domain.Users.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Futions.CRM.Modules.Users.Domain.Permissions.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("Futions.CRM.Modules.Users.Domain.Roles.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Futions.CRM.Modules.Users.Domain.Users.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
